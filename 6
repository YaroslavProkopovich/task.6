//1 Напишите функцию ucFirst(str), возвращающую строку str с заглавным первым символом. 
//Вам понадобятся методы строк.

let string = 'hello World'

function ucFirst(str) {
    return str.toUpperCase()
}
console.log(ucFirst(string[0]));

//2 Напишите функцию checkSpam(str), возвращающую true, если str содержит 'badWord' или 'XXX', а иначе false.
//Функция должна быть нечувствительна к регистру.

function checkSpam(str) {
    let str1 = str.toLowerCase()
    return str1.includes('badWord'.toLowerCase()) || str1.includes('XXX'.toLowerCase())
}

console.log(checkSpam('badWord'));
console.log(checkSpam('XXX'));
console.log(checkSpam('XxX'));
console.log(checkSpam('hi'));

/*3 Написать функцию, которой на вход подается строка, на выход она дает символы наоборот (разворачивает строку). Пример: «привет Женя» -> «янеЖ тевирп»
Обратите внимание: метод reverse существует только у массивов. */

function methods(string) {
    let array = string.split('')
    let reverseArray = array.reverse()
    let result = reverseArray.join('')
    return result
}

console.log(methods('Привет Ярослав'))

/*4 Массив содержит строки с информацией о железнодорожных станциях на севере Англии. Строки представляют собой трёхбуквенный код станции, затем некоторые машиночитаемые данные, за которыми следует точка с запятой, а затем название станции, пригодное для чтения человеком. */


let stations = [
    'MAN675847583748sjt567654;Manchester Piccadilly',
    'GNF576746573fhdg4737dh4;Greenfield',
    'LIV5hg65hd737456236dch46dg4;Liverpool Lime Street',
    'SYB4f65hf75f736463;Stalybridge',
    'HUD5767ghtyfyr4536dh45dg45dg3;Huddersfield'
];

stations.forEach(item => {
    let cod = item.slice(0, 3)
    let index = item.indexOf(';')
    let name = item.slice(index + 1)
    console.log(cod + ':' + name)
})

/*5 Напишите функцию, которая проверяет, содержит ли массив элементы, равные нулю. Если да - возвращает true.
Проверить работу функции на примере массивов [12, 4, 50, 1, 0, 18, 40], [56, 24, -55, 2, 9, -345] */

let arr1 = [12, 4, 50, 1, 0, 18, 40];
let arr2 = [56, 24, -55, 2, 9, -345];

function checkzero(array) {
    if (array.includes(0)) {
        return true
    } else {
        return false
    }
}

console.log(checkzero(arr1));
console.log(checkzero(arr2));

/*6
Напишите функцию unique(arr), которая принимает массив, а возвращает новый массив, содержащий только уникальные элементы arr.
Пример:
let strings = ["кришна", "кришна", "харе", "харе", "харе", "харе", "кришна", "кришна", ":-O"];
console.log(unique(strings) ); должен вывести "кришна, харе, :-O"
ПОДСКАЗКА
- создать новый массив
- обойти исходный массив, если элемент отсутствует в новом - добавлять его в новый. Таким образом в новый добавятся только уникальные. */

let strings = ["кришна", "кришна", "харе", "харе", "харе", "харе", "кришна", "кришна", ":-O"];

function unique(arr) {
    let newArr = []
    for (item of arr) {
        if (!newArr.includes(item)) {
            newArr.push(item)
        }
    }
    return newArr
}

console.log(unique(strings));


/*7 Женя и Юля изучают кошек. Каждая из них узнала у 10 владельцев кошек о возрасте их кошки и сохранила данные в массиве (по одному массиву для каждой девочки). На данный момент им просто интересно узнать, является ли кошка взрослой или котёнком.
Кошка считается взрослой, если ей не менее 2 лет, и котёнком, если ей менее 2 лет.
Создайте функцию verifyCats, которая принимает 2 массива возрастов кошек (catsJane и catsJulia) и выполняет следующие действия:
1. Женя выяснила, что владельцы первой и последней кошки на самом деле имеют собак, а не кошек! Поэтому удалите возраст собак из Жениного массива.
2. Создайте общий массив с данными Жени (исправленными) и Юли.
3. Для каждой кошки этого общего массива выведите в консоль текст:
- если кошка взрослая -  Кошка № 1 взрослая, ей 6 лет
- если котёнок - Кошка № 2 ещё котёнок
4. Вызовите функцию для двух наборов тестовых данных.
Тестовые данные:
1.  Данные Жени [4, 5, 3, 11, 6, 2, 4, 1, 5, 9]
Данные Юли [2, 4, 5, 1, 13, 2, 15, 8, 3, 7]
2.  Данные Жени [3, 5, 9, 14, 1, 2, 6, 8, 3, 10]
Данные Юли [8, 2, 10, 1, 2, 5, 6, 3, 1, 4] */

let catsJane1 = [4, 5, 3, 11, 6, 2, 4, 1, 5, 9];
let catsJulia1 = [2, 4, 5, 1, 13, 2, 15, 8, 3, 7];
//let catsJane2 = [3, 5, 9, 14, 1, 2, 6, 8, 3, 10];
//let catsJulia2 = [8, 2, 10, 1, 2, 5, 6, 3, 1, 4];

function verifyCats(catsJane, catsJulia) {
    catsJane.pop()
    catsJane.shift()
    let commonArr = catsJane.concat(catsJulia)
    commonArr.forEach((item, index) => {
        if (item >= 2) {
            console.log(`Кошка № ${index + 1} взрослая, ей ${item} лет`)
        } else {
            console.log(`Кошка № ${index + 1} ещё котёнок`)
        }

    })
}
verifyCats(catsJane1, catsJulia1)

/*8 Решить 4 задание из прошлой темы, используя метод filter
Определить массив, например let arr = [5, 4, 3, 8, 0];
Создать функцию filterFor(arr, a).Функция должна вернуть новый массив из элементов arr, но в нем должны содержаться элементы, которые больше или равны (>=) значения переменной a.

Например, запуск функции filterFor(arr, 5) дает результат [5,8]
запуск функции filterFor(arr, 10) дает результат []
запуск функции filterFor(arr, 3.11) дает результат [4,5,8] */

let arr = [5, 4, 3, 8, 0];

function filterFor(arr, a) {
    const copyArr = arr.filter(item => item >= a)
    return copyArr
}
console.log(filterFor(arr, 5));
console.log(filterFor(arr, 10));
console.log(filterFor(arr, 3.11));

/*9 Описать функцию, которая принимает массив строк и возвращает массив, содержащий только строки более 3-х символов. Проверить работу функции на примере:  ['yes', 'hello', 'no', 'easycode', 'what']. */

let str1 = ['yes', 'hello', 'no', 'easycode', 'what'];

function threeSumbols(str) {
    let str2 = str.filter(str => str.length > 3)
    return str2
}
console.log(threeSumbols(str1));

/*10 Отсортируйте массив массивов так, чтобы вначале располагались наименьшие массивы (размер массива определяется его длиной): [ [14, 45], [1], ['a', 'c', 'd'] ] → [ [1], [14, 45], ['a', 'c', 'd'] ]

ПОДСКАЗКА. Для правильной сортировки метод sort принимает функцию, параметры которой a и b - это элементы массива. В данной задаче элементы массива, то есть параметры a и b, сами являются массивами и обладают всеми свойствами массивов. */

let array = [
    [14, 45],
    [1],
    ['a', 'c', 'd']
]
let sortArray = array.sort((a, b) => a.length - b.length);
console.log(sortArray);

/* 11 Создайте функцию getAverageHumanAge, которая принимает массив возрастов кошек (catAges) и выполняет следующие действия по порядку:
1. Рассчитывает человеческий возраст по следующей формуле: если возраст кошки <= 2 года, человеческий возраст = возраст кошки * 10. Если кошке больше 2 лет, человеческий возраст = возраст кошки * 7. (сделать через map)
2. Исключает всех кошек младше 18 человеческих лет. (сделать через filter)
3. Возвращает средний человеческий возраст для всех взрослых кошек. (сумму для среднего посчитать через reduce)
Вызовите функцию для обоих наборов тестовых данных.
Тестовые данные: */

let array1 = [7, 3, 2, 4, 1, 15, 8, 1, 9, 2];

let array2 = [1, 16, 12, 4, 5, 1, 3, 11, 7, 2];

function getAverageHumanAge(catAges) {
    let newAges = catAges.map(function(item) {
        if (item <= 2) {
            return item * 10
        } else if (item > 2) {
            return item * 7
        }
    })
    let newCats = newAges.filter(item => item >= 18);
    let middleAges = newCats.reduce((acc, item) => acc + item, 0)
    return middleAges / newCats.length
}

console.log(getAverageHumanAge(array1));
console.log(getAverageHumanAge(array2));
